@model ContentOptionsViewModel
@{
    var formActionWithoutTypeName = Url.RouteUrl(new { area = "OrchardCore.Contents", controller = "Admin", action = "List", contentTypeId = "" });
}
<div class="form-group mb-n1 filter">
    <div class="btn-group mt-1">
        <select asp-for="SelectedContentType" asp-items="Model.ContentTypeOptions" class="selectpicker contenttypes-selectpicker show-tick mr-2" data-header="@T["Filter by content type"]" data-live-search="true" data-selected-text-format="static" data-width="fit" title="@T["Content Type"]" data-style="btn-sm">
        </select>
        <select asp-for="ContentsStatus" asp-items="@Model.ContentStatuses" class="selectpicker contentstatuses-selectpicker show-tick mr-2" data-header="@T["Filter by status"]" data-selected-text-format="static" data-width="fit" data-dropdown-align-right="true" title="@T["Show"]" data-style="btn-sm"></select>
        <select asp-for="OrderBy" asp-items="@Model.ContentSorts" class="selectpicker contentsorts-selectpicker show-tick" data-header="@T["Sort by"]" data-width="fit" data-selected-text-format="static" data-dropdown-align-right="true" title="@T["Sort"]" data-style="btn-sm"></select>
    </div>
</div>

<script at="Foot" type="text/javascript">
    $(function () {
        @* This has some issues due to the admin menus arrangement. (the admin menu remains active when changing)
            TODO reset the cookie on change.
            What happens currently is that the Content Types list stays active.
            *@
    @* This is because ContentTypesAdminNode requires the ContentType to be available as part of the url *@
        
        $("#Options_SelectedContentType").change(function (e) {
            var value = $("#Options_SelectedContentType option:selected").val();
            var newAction = "@formActionWithoutTypeName" + "/" + value;
            $("#items-form").attr("action", newAction);
        });
    })
</script>
